-- =====================================================
-- ๐ ูุญุต ุดุงูู ููุธุงู Realtime ูุงูุฅุดุนุงุฑุงุช ูู GoDarna
-- =====================================================

-- 1. ูุญุต ุชูุนูู Realtime ููุฌุฏุงูู
SELECT 
    'Realtime Tables Check' as check_type,
    tablename,
    CASE 
        WHEN tablename IN (
            SELECT tablename 
            FROM pg_publication_tables 
            WHERE pubname = 'supabase_realtime'
        ) THEN 'โ ูููุนู'
        ELSE 'โ ุบูุฑ ูููุนู'
    END as status
FROM pg_tables 
WHERE tablename IN (
    'profiles', 'listings', 'bookings', 'notifications', 
    'messages', 'favorites', 'reviews', 'payments', 
    'chats', 'chat_participants'
)
AND schemaname = 'public'
ORDER BY tablename;

-- 2. ูุญุต ูุฌูุฏ ุงูุฌุฏุงูู ุงููุทููุจุฉ
SELECT 
    'Tables Existence Check' as check_type,
    table_name,
    CASE 
        WHEN table_name IS NOT NULL THEN 'โ ููุฌูุฏ'
        ELSE 'โ ููููุฏ'
    END as status
FROM (
    VALUES 
        ('profiles'), ('listings'), ('bookings'), 
        ('notifications'), ('messages'), ('favorites'),
        ('reviews'), ('payments'), ('chats'), ('chat_participants')
) AS required_tables(table_name)
LEFT JOIN information_schema.tables t 
    ON t.table_name = required_tables.table_name 
    AND t.table_schema = 'public';

-- 3. ูุญุต ุณูุงุณุงุช RLS
SELECT 
    'RLS Policies Check' as check_type,
    tablename,
    policyname,
    CASE 
        WHEN cmd = 'SELECT' THEN '๐๏ธ ูุฑุงุกุฉ'
        WHEN cmd = 'INSERT' THEN 'โ ุฅุฏุฑุงุฌ'
        WHEN cmd = 'UPDATE' THEN 'โ๏ธ ุชุญุฏูุซ'
        WHEN cmd = 'DELETE' THEN '๐๏ธ ุญุฐู'
        ELSE cmd
    END as operation,
    'โ ูููุนู' as status
FROM pg_policies 
WHERE tablename IN (
    'profiles', 'listings', 'bookings', 'notifications', 
    'messages', 'favorites', 'reviews', 'payments'
)
ORDER BY tablename, cmd;

-- 4. ูุญุต ุงูุฏูุงู ุงููุทููุจุฉ
SELECT 
    'Functions Check' as check_type,
    routine_name,
    CASE 
        WHEN routine_name IS NOT NULL THEN 'โ ููุฌูุฏ'
        ELSE 'โ ููููุฏ'
    END as status,
    routine_type
FROM information_schema.routines
WHERE routine_name IN (
    'send_notification',
    'send_bulk_notifications',
    'notify_new_booking',
    'notify_booking_status_change',
    'notify_new_message',
    'notify_new_review',
    'get_notification_stats',
    'mark_notifications_as_read',
    'cleanup_old_notifications'
)
AND routine_schema = 'public'
ORDER BY routine_name;

-- 5. ูุญุต ุงููุญูุฒุงุช
SELECT 
    'Triggers Check' as check_type,
    trigger_name,
    event_object_table as table_name,
    CASE 
        WHEN trigger_name IS NOT NULL THEN 'โ ูููุนู'
        ELSE 'โ ุบูุฑ ูููุนู'
    END as status,
    action_timing || ' ' || event_manipulation as trigger_event
FROM information_schema.triggers
WHERE trigger_name IN (
    'trigger_notify_new_booking',
    'trigger_notify_booking_status_change',
    'trigger_notify_new_message',
    'trigger_notify_new_review'
)
ORDER BY trigger_name;

-- 6. ูุญุต ุฃููุงุน ุงูุจูุงูุงุช ุงููุฎุตุตุฉ
SELECT 
    'Custom Types Check' as check_type,
    typname as type_name,
    'โ ููุฌูุฏ' as status,
    CASE 
        WHEN typname = 'notification_type' THEN 'ุฃููุงุน ุงูุฅุดุนุงุฑุงุช'
        WHEN typname = 'booking_status' THEN 'ุญุงูุงุช ุงูุญุฌุฒ'
        WHEN typname = 'user_role' THEN 'ุฃุฏูุงุฑ ุงููุณุชุฎุฏููู'
        ELSE 'ููุน ูุฎุตุต'
    END as description
FROM pg_type 
WHERE typname IN ('notification_type', 'booking_status', 'user_role')
ORDER BY typname;

-- 7. ูุญุต ุงูููุงุฑุณ ููุฃุฏุงุก
SELECT 
    'Indexes Check' as check_type,
    schemaname,
    tablename,
    indexname,
    'โ ููุฌูุฏ' as status
FROM pg_indexes 
WHERE tablename IN ('notifications', 'bookings', 'messages', 'favorites')
AND schemaname = 'public'
ORDER BY tablename, indexname;

-- 8. ุฅุญุตุงุฆูุงุช ุงูุฌุฏุงูู
SELECT 
    'Table Statistics' as check_type,
    schemaname,
    tablename,
    n_tup_ins as inserts,
    n_tup_upd as updates,
    n_tup_del as deletes,
    n_live_tup as live_rows
FROM pg_stat_user_tables 
WHERE tablename IN (
    'profiles', 'listings', 'bookings', 'notifications', 
    'messages', 'favorites', 'reviews'
)
ORDER BY tablename;

-- 9. ูุญุต ุงูุตูุงุญูุงุช
SELECT 
    'Permissions Check' as check_type,
    grantee,
    table_name,
    privilege_type,
    'โ ููููุญ' as status
FROM information_schema.role_table_grants 
WHERE table_name IN ('notifications', 'bookings', 'messages')
AND grantee = 'authenticated'
ORDER BY table_name, privilege_type;

-- 10. ุงุฎุชุจุงุฑ ุฏุงูุฉ ุงูุฅุดุนุงุฑุงุช
DO $$
DECLARE
    test_user_id UUID := '00000000-0000-0000-0000-000000000001';
    notification_id UUID;
    stats_record RECORD;
BEGIN
    -- ุงุฎุชุจุงุฑ ุฅุฑุณุงู ุฅุดุนุงุฑ
    BEGIN
        SELECT send_notification(
            test_user_id,
            'ุงุฎุชุจุงุฑ ุงููุธุงู',
            'ูุฐุง ุฅุดุนุงุฑ ุงุฎุชุจุงุฑ ููุชุฃูุฏ ูู ุนูู ุงููุธุงู',
            'general'
        ) INTO notification_id;
        
        RAISE NOTICE 'โ ุงุฎุชุจุงุฑ ุฅุฑุณุงู ุงูุฅุดุนุงุฑุงุช: ูุฌุญ (ID: %)', notification_id;
    EXCEPTION WHEN OTHERS THEN
        RAISE NOTICE 'โ ุงุฎุชุจุงุฑ ุฅุฑุณุงู ุงูุฅุดุนุงุฑุงุช: ูุดู - %', SQLERRM;
    END;
    
    -- ุงุฎุชุจุงุฑ ุฏุงูุฉ ุงูุฅุญุตุงุฆูุงุช
    BEGIN
        SELECT * INTO stats_record FROM get_notification_stats(test_user_id);
        RAISE NOTICE 'โ ุงุฎุชุจุงุฑ ุฅุญุตุงุฆูุงุช ุงูุฅุดุนุงุฑุงุช: ูุฌุญ';
    EXCEPTION WHEN OTHERS THEN
        RAISE NOTICE 'โ ุงุฎุชุจุงุฑ ุฅุญุตุงุฆูุงุช ุงูุฅุดุนุงุฑุงุช: ูุดู - %', SQLERRM;
    END;
    
    -- ุชูุธูู ุงูุงุฎุชุจุงุฑ
    DELETE FROM notifications WHERE user_id = test_user_id;
END $$;

-- 11. ููุฎุต ุงูุญุงูุฉ ุงูุนุงูุฉ
SELECT 
    'System Status Summary' as check_type,
    'Realtime System' as component,
    CASE 
        WHEN (
            SELECT COUNT(*) 
            FROM pg_publication_tables 
            WHERE pubname = 'supabase_realtime'
            AND tablename IN ('notifications', 'bookings', 'messages', 'favorites')
        ) >= 4 THEN '๐ข ูุดุท'
        ELSE '๐ด ูุญุชุงุฌ ุฅุตูุงุญ'
    END as status,
    'ูุธุงู ุงูุชุญุฏูุซุงุช ุงูููุฑูุฉ' as description

UNION ALL

SELECT 
    'System Status Summary' as check_type,
    'Notifications System' as component,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.tables 
            WHERE table_name = 'notifications'
        ) AND EXISTS (
            SELECT 1 FROM information_schema.routines 
            WHERE routine_name = 'send_notification'
        ) THEN '๐ข ูุดุท'
        ELSE '๐ด ูุญุชุงุฌ ุฅุตูุงุญ'
    END as status,
    'ูุธุงู ุงูุฅุดุนุงุฑุงุช' as description

UNION ALL

SELECT 
    'System Status Summary' as check_type,
    'Database Triggers' as component,
    CASE 
        WHEN (
            SELECT COUNT(*) 
            FROM information_schema.triggers 
            WHERE trigger_name LIKE 'trigger_notify_%'
        ) >= 3 THEN '๐ข ูุดุท'
        ELSE '๐ด ูุญุชุงุฌ ุฅุตูุงุญ'
    END as status,
    'ุงููุญูุฒุงุช ุงูุชููุงุฆูุฉ' as description;

-- =====================================================
-- ๐ ุชุนูููุงุช ุงูุงุณุชุฎุฏุงู:
-- =====================================================

/*
ูุชุดุบูู ูุฐุง ุงููุญุต:
1. ูู Supabase Dashboard:
   - ุงุฐูุจ ุฅูู SQL Editor
   - ุงูุตู ูุฐุง ุงูููุฏ
   - ุงุถุบุท Run

2. ุฃู ูู ุณุทุฑ ุงูุฃูุงูุฑ:
   psql -d your_database -f comprehensive_system_check.sql

3. ุงููุชุงุฆุฌ ุงููุชููุนุฉ:
   โ ุฌููุน ุงูุฌุฏุงูู ูููุนูุฉ ููู Realtime
   โ ุฌููุน ุงูุณูุงุณุงุช ููุฌูุฏุฉ ููุดุทุฉ
   โ ุฌููุน ุงูุฏูุงู ูุงููุญูุฒุงุช ุชุนูู
   โ ุงููุธุงู ุฌุงูุฒ ููุงุณุชุฎุฏุงู

ุฅุฐุง ุธูุฑุช ุฃู ุนูุงูุงุช โ ุฃู ๐ด:
- ุฑุงุฌุน ููู complete_realtime_setup.sql
- ุชุฃูุฏ ูู ุชุดุบููู ุจุงููุงูู
- ุชุญูู ูู ุตูุงุญูุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช
*/
